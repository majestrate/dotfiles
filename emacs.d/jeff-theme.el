(deftheme jeff
  "Created 2015-08-30.")

(custom-theme-set-faces
 'jeff
 '(cursor ((t (:background "tomato"))))
 '(fixed-pitch ((t (:family "courier"))))
 '(variable-pitch ((t (:family "helv"))))
 '(escape-glyph ((t (:foreground "red1"))))
 '(minibuffer-prompt ((t (:foreground "orange red"))))
 '(highlight ((t (:background "dark violet" :foreground "gainsboro"))))
 '(region ((t (:background "firebrick" :foreground "deep sky blue"))))
 '(shadow ((((class color grayscale) (min-colors 88) (background light)) (:foreground "grey50")) (((class color grayscale) (min-colors 88) (background dark)) (:foreground "grey70")) (((class color) (min-colors 8) (background light)) (:foreground "green")) (((class color) (min-colors 8) (background dark)) (:foreground "yellow"))))
 '(secondary-selection ((t (:background "steel blue"))))
 '(trailing-whitespace ((t (:background "red"))))
 '(font-lock-builtin-face ((t (:foreground "deep sky blue"))))
 '(font-lock-comment-delimiter-face ((t (:inherit font-lock-comment-face :background "gray10"))))
 '(font-lock-comment-face ((t (:foreground "dark orchid"))))
 '(font-lock-constant-face ((t (:foreground "chartreuse1"))))
 '(font-lock-doc-face ((t (:foreground "violet red"))))
 '(font-lock-function-name-face ((t (:foreground "magenta" :weight bold))))
 '(font-lock-keyword-face ((t (:foreground "deep pink" :weight bold))))
 '(font-lock-negation-char-face ((t nil)))
 '(font-lock-preprocessor-face ((t (:inherit (font-lock-builtin-face)))))
 '(font-lock-regexp-grouping-backslash ((t (:inherit (bold)))))
 '(font-lock-regexp-grouping-construct ((t (:inherit (bold)))))
 '(font-lock-string-face ((t (:background "dark turquoise" :foreground "firebrick2" :slant italic))))
 '(font-lock-type-face ((t (:foreground "honeydew2" :weight bold))))
 '(font-lock-variable-name-face ((t (:foreground "tomato1" :weight bold))))
 '(font-lock-warning-face ((t (:foreground "red" :weight bold))))
 '(button ((t (:box (:line-width 2 :color "grey75" :style released-button)))))
 '(link ((t (:underline (:color foreground-color :style line) :foreground "cyan1"))))
 '(link-visited ((t (:foreground "violet"))))
 '(fringe ((t nil)))
 '(header-line ((t (:background "cornsilk4" :foreground "white smoke" :box nil))))
 '(tooltip ((t (:background "sienna1" :foreground "aquamarine"))))
 '(mode-line ((t (:background "red" :box (:line-width -1 :style released-button)))))
 '(mode-line-buffer-id ((t (:foreground "DarkGoldenrod1" :weight bold))))
 '(mode-line-emphasis ((t (:weight bold))))
 '(mode-line-highlight ((t (:box (:line-width 2 :color "grey40" :style released-button)))))
 '(mode-line-inactive ((t (:background "grey30" :foreground "grey80" :box (:line-width -1 :color "grey40") :weight light))))
 '(isearch ((t (:background "SpringGreen1" :foreground "medium blue"))))
 '(isearch-fail ((t (:background "dark red"))))
 '(lazy-highlight ((((class color) (min-colors 88) (background light)) (:background "paleturquoise")) (((class color) (min-colors 88) (background dark)) (:background "paleturquoise4")) (((class color) (min-colors 16)) (:background "turquoise3")) (((class color) (min-colors 8)) (:background "turquoise3")) (t (:underline (:color foreground-color :style line)))))
 '(match ((t (:background "orange red" :foreground "medium sea green"))))
 '(next-error ((t (:inherit (region)))))
 '(query-replace ((t (:inherit (isearch)))))
 '(default ((t (:stipple nil :background "gray10" :foreground "azure1" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 108 :width normal :foundry "unknown" :family "DejaVu Sans Mono")))))

(provide-theme 'jeff)
